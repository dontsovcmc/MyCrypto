.. _n7:

###########
Set 1 No. 7
###########

**AES in ECB mode**

The file ``7.txt`` is base64-encoded data.  It has been encrypted via AES-128 in ECB mode with the key ``YELLOW SUBMARINE``.  Decrypt the data.

pip install pycrypto

The code:

from Crypto.Cipher import AES
from Crypto import Random
k = b'YELLOW SUBMARINE'
cipher = AES.new(k, AES.MODE_ECB)

In the interpreter:

    >>> from Crypto.Cipher import AES
    >>> from Crypto import Random
    >>> k = b'YELLOW SUBMARINE'
    >>> iv = Random.new().read(AES.block_size)
    >>> cipher = AES.new(k, AES.MODE_ECB, iv)
    >>> msg = cipher.encrypt(b'Attack at dawn..')
    >>> 
    >>> msg
    '\xb8r\x9b\x02b\xa0\x12ky\xe4:+\xe6\x86p\xcf'
    >>> ba = bytearray(msg)
    >>> L = [int(b) for b in ba]
    >>> L[:8]
    [184, 114, 155, 2, 98, 160, 18, 107]
    >>>

Step 1 is to generate the binary data:

.. sourcecode:: bash

    > openssl enc -base64 -d -in 7.txt -out 7.bin
    > hexdump -C -n 64 7.bin
    00000000  09 12 30 aa de 3e b3 30  db aa 43 58 f8 8d 2a 6c  |..0..>.0..CX..*l|
    00000010  37 b7 2d 0c f4 c2 2c 34  4a ec 41 42 d0 0c e5 30  |7.-...,4J.AB...0|
    00000020  dd 31 b8 c2 30 3f ef 7a  75 03 5b d0 4b 3c 45 ce  |.1..0?.zu.[.K<E.|
    00000030  0d b9 3a 6b 8f 28 31 b0  18 e8 30 d9 b2 e2 db 73  |..:k.(1...0....s|
    00000040
    >
    
Then, in Python, we load the data:

    >>> import crypto as ut
    >>> data = ut.load_binary_data('7.bin')
    >>> data[:8]
    [9, 18, 48, 170, 222, 62, 179, 48]
    >>>
    
And then we try:

    >>> from Crypto.Cipher import AES
    >>> from Crypto import Random
    >>> k = b'YELLOW SUBMARINE'
    >>> cipher = AES.new(k, AES.MODE_ECB)
    >>> p = cipher.decrypt(str(bytearray(data)))
    >>> FH = open('out','w')
    >>> FH.write(p)
    >>> FH.close()
    >>> 
    [2]+  Stopped                 python
    > cat out
    I'm back and I'm ringin' the bell 
    A rockin' on the mike while the fly girls yell 
    In ecstasy in the back of me 
    Well that's my DJ Deshay cuttin' all them Z's 
    Hittin' hard and the girlies goin' crazy 
    Vanilla's on the mike, man I'm not lazy. 
    ..

Looks familiar.  So the question is, what does ``str(bytearray(data))`` do?

    >>> ba = bytearray('\x00CAt')
    >>> ba
    bytearray(b'\x00CAt')
    >>> str(ba)
    '\x00CAt'
    >>>

OK.  Not the same as print, that's for sure.
